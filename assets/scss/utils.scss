$spacingsizes: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 2,
  5: 4,
  6: 8,
) !default;

$sides: (
  '': 'all',
  't': 'top',
  'b': 'bottom',
  'l': 'left',
  'r': 'right',
  'x': (
    'left',
    'right',
  ),
  'y': (
    'top',
    'bottom',
  ),
);

/*
* Generate Spacing
* @usage (.mb-1, .mx-6, .py-2, .p-4)
*/
@each $size, $space in $spacingsizes {
  @each $prefix, $value in $sides {
    $property: if($prefix == '', '', -#{$value});
    .m#{$prefix}-#{$size} {
      @if $prefix == 'x' or $prefix == 'y' {
        @each $v in $value {
          margin-#{$v}: #{$space}em !important;
        }
      } @else {
        margin#{$property}: #{$space}em !important;
      }
    }
    .p#{$prefix}-#{$size} {
      @if $prefix == 'x' or $prefix == 'y' {
        @each $v in $value {
          padding-#{$v}: #{$space}em !important;
        }
      } @else {
        padding#{$property}: #{$space}em !important;
      }
    }
  }
}


@mixin fluid-type(
  $min-font-size: 12px,
  $max-font-size: 21px,
  $lower-range: 420px,
  $upper-range: 900px
) {
  font-size: calc(
    #{$min-font-size} + #{(
        ($max-font-size / ($max-font-size * 0 + 1)) -
          ($min-font-size / ($min-font-size * 0 + 1))
      )} * ((100vw - #{$lower-range}) / #{(
            ($upper-range / ($upper-range * 0 + 1)) -
              ($lower-range / ($lower-range * 0 + 1))
          )})
  );

  @media screen and (max-width: $lower-range) {
    font-size: $min-font-size;
  }
  @media screen and (min-width: $upper-range) {
    font-size: $max-font-size;
  }
}